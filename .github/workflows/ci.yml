name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-C debuginfo=line-tables-only -C incremental=false"

jobs:
  check:
    name: Basic check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-03-30

      - uses: Swatinem/rust-cache@v2
      
      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Check documentation
        run: cargo doc --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: -D warnings

      - name: Run clippy
        run: cargo clippy -- -D warnings

  unit_test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-03-30
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --workspace --codecov --output-path codecov.json
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }} 
          files: codecov.json
          fail_ci_if_error: true
  
  shuttle_test:
    name: Shuttle Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-03-30
      - uses: Swatinem/rust-cache@v2
      - name: Run shuttle test
        run: |
          cd src/liquid_parquet
          cargo test --features "shuttle" --release -- --test-threads=1 shuttle 

  address_san:
    name: Address Sanitizer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-03-30
      # Address sanitizers can't be cached: https://github.com/Swatinem/rust-cache/issues/161
      - run: sudo apt install llvm-dev -y
      - name: Run address sanitizer
        run: >
          env RUSTFLAGS="-Z sanitizer=address" cargo test -Zbuild-std --target x86_64-unknown-linux-gnu --tests -p liquid-cache-parquet

  clickbench:
    name: ClickBench
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-03-30
      - run: sudo apt-get update && sudo apt-get install -y wget
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - uses: Swatinem/rust-cache@v2
      - name: Download ClickBench partition 0
        run: |
          mkdir -p benchmark/data
          wget https://datasets.clickhouse.com/hits_compatible/athena_partitioned/hits_0.parquet -O benchmark/data/hits_0.parquet
      - name: Run ClickBench
        run: |
          source <(cargo llvm-cov show-env --export-prefix)
          cargo llvm-cov clean --workspace
          cargo build --bin bench_server
          cargo build --bin clickbench_client
          env RUST_LOG=info nohup cargo run --bin bench_server -- --abort-on-panic &> server.log &
          sleep 2  # Wait for server to start up
          env RUST_LOG=info cargo run --bin clickbench_client -- --query-path benchmark/clickbench/queries/queries.sql --file examples/nano_hits.parquet
          echo "=== Server logs ==="
          cat server.log || echo "No server log found"
          curl http://localhost:50052/shutdown
          env RUST_LOG=info nohup cargo run --bin bench_server -- --abort-on-panic &> server.log &
          sleep 2  # Wait for server to start up
          env RUST_LOG=info cargo run --bin clickbench_client -- --query-path benchmark/clickbench/queries/queries.sql --file benchmark/data/hits_0.parquet --answer-dir benchmark/clickbench/answers/clickbench_0
          echo "=== Server logs (partition 0) ==="
          cat server.log || echo "No server log found"
          curl http://localhost:50052/shutdown
          cargo llvm-cov report --codecov --output-path codecov_clickbench.json
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov_clickbench.json
          fail_ci_if_error: true

  tpch:
    name: TPC-H
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-03-30
      - run: sudo apt-get update && sudo apt-get install -y wget
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - uses: Swatinem/rust-cache@v2
      - name: Setup TPC-H data
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          cd benchmark/tpch
          uvx --from duckdb python tpch_gen.py --scale 0.1
      - name: Run TPC-H
        run: |
          source <(cargo llvm-cov show-env --export-prefix)
          cargo llvm-cov clean --workspace
          cargo build --bin bench_server
          cargo build --bin tpch_client
          env RUST_LOG=info nohup cargo run --bin bench_server -- --abort-on-panic &> server.log &
          sleep 2  # Wait for server to start up
          env RUST_LOG=info cargo run --bin tpch_client -- --query-dir benchmark/tpch/queries --answer-dir benchmark/tpch/answers/sf0.1 --data-dir benchmark/tpch/data/sf0.1
          echo "=== Server logs ==="
          cat server.log || echo "No server log found"
          curl http://localhost:50052/shutdown
          cargo llvm-cov report --codecov --output-path codecov_tpch.json
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov_tpch.json
          fail_ci_if_error: true

  examples:
    name: Run client/server examples (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-03-30

      - uses: Swatinem/rust-cache@v2

      - name: Build LiquidCache server
        run: cargo build --bin example_server
      - name: Build LiquidCache client
        run: cargo build --bin example_client

      - name: Start LiquidCache server
        run: |
          env RUST_LOG=info nohup cargo run --bin example_server -- --abort-on-panic &> server.log &
          echo $! > server.pid  # Save PID for later cleanup
          sleep 2  # Wait for server to start up

      - name: Start LiquidCache client
        run: |
          # First run to populate the cache
          env RUST_LOG=info cargo run --bin example_client
          # Run twice to test the cache
          env RUST_LOG=info cargo run --bin example_client

      - name: Kill LiquidCache server and show logs
        if: always()
        run: |
          echo "=== Server logs ==="
          cat server.log || echo "No server log found"
          pkill -F server.pid || true
          rm -f server.pid
